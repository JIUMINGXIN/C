#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include <string.h>
#include <windows.h>
#include <stdlib.h>
#include <math.h>
#include <time.h>
//void add(int* p)
//{
//(* p)++;
//}
//
//int main()
//{
//	int s = 0;
//	printf("%d\n", s);
//	add(&s);
//	printf("%d\n", s);
//	add(&s);
//	printf("%d\n", s);
//	add(&s);
//	printf("%d\n", s);
//
//	return 0;
//}

//int main()
//{
//	printf("%d", printf("%d", printf("%d", 43)));//先打印43后面调用printf函数时是计算43有几位所以答案是4321
//	return 0;
//}
//#include "2.h"
//int main()
//{
//	int a = 10;
//	int b = 20;
//	int c = 0;
//	c = add(a, b);
//	printf("%d", c);
//	return 0;
//}

//void print(int x)//递归
//{
//	if (x>9)
//	{
//		
//		print(x/10);
//
//	}
//	printf("%d ", x%10);
//}
//int main()//把每位数拆开
//{
//	int a = 0;
//	int q = 0;
//	unsigned int s =0;
//	scanf("%d", &s);//1234
//	print(s);
//	return 0;
//}

//int s(char* x)
//{
//	if (*x != '\0')
//	{
//		return	1 + s(x + 1);
//	}
//	else
//		return 0;
//}
//
//int main()//计算字符段长度
//{
//	char a[] = "abc";
//	int q = s(a);
//	printf("q=%d", q);
//
//	return 0;
//}

//int s(int n)
//{
//	if (n <= 1)
//		return 1;
//	else
//		return n * s(n - 1);
//
//}
//
//int main()//递归求阶乘
//{
//	int a = 0;
//	int q = 0;
//	scanf("%d", &a);
//	q = s(a);
//	printf("%d", q);
//	return 0;
//}

//int s(int n)//输入几就出来第几位的斐波那契数
//{
//	int a = 1;
//	int b = 1;
//	int c = 0;
//	while (n > 2)
//	{
//		c = a + b;
//		a = b;
//		b = c;
//		n--;
//	}
//	if (c < 2)
//
//		return 1;
//	else
//		return c;
//
//}
//int e = 0;
//int s(int n)//找下标出现了几次e
//{
//	if (n ==2)//n可以改变成要找的下标3，4---
//	{
//		e++;
//	}
//	if (n > 2)
//	{
//		return s(n - 1) + s(n - 2);
//	}
//	else
//		return 1;
//}
//int main()
//{
//	int a = 0;
//	int q = 0;
//	scanf("%d", &a);
//	q = s(a);
//	printf("%d\n", q);
//	printf("e=%d", e);
//	return 0;
//}

//int main()//输出10个斐波那契数
//{
//	int i = 1;
//	int f[11];
//	
//	int q = 0;
//	 f[1] = f[0]= 1;
//	 
//	
//	for (i = 2; i <10; i++)
//	{
//		f[i] = f[i - 1] + f[i - 2];
//		
//	}
//	for (i = 0; i <10; i++)
//	{
//		if (i % 4 == 0)
//		{ 
//			printf("\n");
//
//		}
//		printf("%d ", f[i]);
//	}
//	return 0;
//}

//int s(int n)
//{
//	if (n > 2)
//	{
//		return s(n - 1) + s(n - 2);
//	}
//	return 1;
//}
//int main()//斐波那契数输入第几个就会出来第几个的斐波那契数
//{
//	int a = 0;
//	int q = 0;
//	scanf("%d", &a);
//	q = s(a);
//	printf("q=%d", q);
//
//	return 0;
//}
