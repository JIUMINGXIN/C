//int main()
//{
//    int a[4] = { 1,2,3,4 };//存储在内存中是 01 00 00 00|02 00 00 00|03 00 00 00|04 00 00 00
//    int* ptr1 = (int*)(&a + 1);//4-*(ptr1-1)
//    int* ptr2 = (int*)((int)a + 1);//假设地址是0x00 00 00 05 强制转换成整型5+1=6，0x00 00 00 06 所以只能访问1个字节:00 00 00 02(内存)0x02 00 00 00
//    printf("% x,% x", ptr1[-1], *ptr2);//2000000（%x是16进制）
//
//    return 0;
//}

//int main()
//{
//	int a[3][2] = { (0,1),(2,3),(4,5) };//逗号表达式{1，3，5}在一维数组里头是13 50 00
//	int* p;
//	p = a[0];//第一行的首元素地址
//	printf("%d", p[0]);//1-*(p+0)
//	return 0;
//}

int main()
{
	int a[5][5];
	int(*p)[4];
	p =(int(*)[4]) a;
	printf("%p,%d\n", &p[4][2] - &a[4][2], &p[4][2] - &a[4][2]);//地址相减看里面有几个地址
	//-4
	//10000000 00000000 00000000 00000100
	//11111111 11111111 11111111 11111011
	//11111111 11111111 11111111 11111100补码
	//1111 1111 1111 1111 1111 1111 1111 1100
	//f     f     f    f    f    f    f    c 16进制
	//fffffffc,-4
	return 0;
}
