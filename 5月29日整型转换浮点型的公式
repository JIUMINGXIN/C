int main()
{
	int n = 9;
	float* p = (float*)&n;
	printf("%d\n", n);//9
	printf("%f\n", *p);
	//00000000 00000000 00000000 00001001
	//0 00000000 00000000000000000001001(S E M)
	//E=1-127=-126(E在内存中全0的情况1-127或1-1023，同时M不用加上原本的1)
	//M=0.00000000000000000001001
	//(-1)^0*0.00000000000000000001001*2^-126
	//0.000000(打印的是float无线接近0)
	*p = 9.0;
	printf("%d\n", n);//1091567616
	//1001.0
	//M=1.001
	//E=3
	//(-1)^0*1.001*2^3
	//0 10000010 00100000000000000000000(存储到内存中E要加上127或1023：3+127=130，同时只取M中的小数位)
	printf("%f\n", *p);
	//9.000000
	return 0;
}

//int main()
//{
//	float a = 5.5;//在float中E要加上127，在double中E要加上1023
//	//(-1)^S*M*2^E
//	//(-1)^S表示符号位，当s=0，V为正数；当s=1，V为负数
//	//M表示有效数字，大于等于1，小于2
//	//2^E表示指数位
//
//	//101.1
//	//(-1)^0*1.011*2^2//M=1.011 E=2
//	//E+127=2+127=129
//	//M=011//M存储在内存中只取小数位
//	//0 10000001 01100000000000000000000（S&E&M）
//	//0100 0000 1011 0000 0000 0000 0000 0000(算16进制)
//	//40B00000
//	//0x40B00000
//	return 0;
//}
