//struct s1//结构体内存对齐
//{
//	char c1;
//	int a;
//	char c2;
//};
//struct s2
//{
//	char c1;
//	char c2;
//	int a;
//};
//struct s3
//{
//	double c1;//8
//	char c2;//1
//	int a;//4
//};
//struct s4
//{
//	char c1;//1
//	struct s3 c2;//对齐到自己里面最大对齐数:8
//	double a;//8
//};
//int main()
//{
//	//gcc - 没有默认对齐数
//	//1.第一个成员在与结构体变量偏移量为0的地址处。
//	//2.其他成员变量要对齐到某个数字（对齐数）的整数倍的地址处。对齐数 = 编译器默认的一个对齐数与该成员大小的较小值。
//	//VS中默认的值为8
//	//3.结构体总大小为最大对齐数（每个成员变量都有一个对齐数）的整数倍。
//	//4.如果嵌套了结构体的情况，嵌套的结构体对齐到自己的最大对齐数的整数倍处，结构体的整体大小就是所有最大对齐数（含嵌套结构体的对齐数）的整数倍
//	printf("%d\n", sizeof(s1));//12
//	printf("%d\n", sizeof(s2));//8
//	printf("%d\n", sizeof(s3));//16
//	printf("%d\n", sizeof(s4));//32
//	return 0;
//}

//#pragma pack(4)//设置结构体的默认对齐数为4
//#pragma pack()//取消设置的默认对齐数
//struct S
//{
//	char c1;//前1  后1
//	//浪费前7  后3
//	double c2;//前8  后4
//};
//
//int main()
//{
//	struct S s;
//	printf("%d\n", sizeof(s));//原本是16 但是默认对齐数改为4就为12
//	return 0;
//}

#include <stddef.h>
struct S
{
	char c;//0结构体变量偏移量
	int i;//4结构体变量偏移量
	double d;//8结构体变量偏移量
};
int main()
{
	//offsetof结构体变量偏移量的位置
	printf("%d\n", offsetof(struct S, c));
	printf("%d\n", offsetof(struct S, i));
	printf("%d\n", offsetof(struct S, d));
	return 0;
}
