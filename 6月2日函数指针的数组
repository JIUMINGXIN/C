//void (*signal(int, void(*)(int)))(int);//signal是一个函数声明，signal函数的参数有2个，第一个是int，第二个是函数指针，该函数指针指向的函数的参数是int，返回类型是void。
//p singnal(int, p);                     //signal函数的返回类型也是一个函数指针，该函数指针指向的函数的参数是int，返回类型是void
//typedef void(*p)(int);//函数指针改名字这样该
//typedef unsigned uint;//普通是这样

//int add(int x, int y)
//{
//	return x + y;
//}
//int sub(int x, int y)
//{
//	return x - y;
//}
//int mul(int x, int y)
//{
//	return x * y;
//}
//int cu(int x, int y)
//{
//	return x / y;
//}
//int main()
//{
//	//指针数组
//	int* arr[5];
//	//需要一个数组，这个数组可以存放4个函数的地址-函数指针的数组
//	int (*pa[4])(int, int) = {add,sub,mul,cu};//int (*     )(int, int)函数指针pa[4]数组
//	int i = 0;
//	for (i = 0; i < 4; i++)
//	{
//		printf("%d ", (pa[i])(10, 5));
//	}
//	return 0;
//}

char* my_strcpy(char* dest, const char* src);
//1.写一个函数指针pf，能够指向my_strcpy
//2.写一个函数指针数组pfArr，能够存放4个my_strcpy函数的地址
int main()
{
	//1
	char* (*pf)(char*, const char*) = my_strcpy;
	//2
	char* (*pfArr[4])(char*, const char*) ;
	return 0;
}
