//void left(char* arr, int k)//暴力求解法
//{
//	assert(arr);
//	char t = 0;
//	int i = 0;
//	int len = strlen(arr);
//	for (i = 0; i < k; i++)
//	{
//		//左旋转1个字符
//		//1：
//		t = *arr;
//		//2：
//		int j = 0;
//		for (j = 0; j < len-1; j++)
//		{
//			*(arr + j) = *(arr + j + 1);
//		}
//		//3：
//		*(arr + len - 1) = t;
//	}
//}
//void reverse(char*left, char*right)
//{
//	assert(left != NULL);
//	assert(right != NULL);
//		while (left<=right)
//		{
//			char t = *left;
//			*left = *right;
//			*right = t;
//			left++;
//			right--;
//		}
//
//}
//void left(char* arr, int k)//三部反转法:
////abcdef
////bafedc
////cdefab
//{
//	assert(arr);
//	int len = strlen(arr);
//	assert(k <= len);
//	reverse(arr,arr+k-1);//逆序左边
//	reverse(arr+k,arr+len-1);//逆序右边
//	reverse(arr,arr+len-1);//逆序整体
//}
//int main()
//{
//	/*1.实现一个函数，可以左旋字符串中的k个字符。
//		ABCD左旋一个字符得到BCDA
//		ABCD左旋两个字符得到CDAB*/
//	char arr[] = "abcdef";
//	left(arr, 2);
//	printf("%s\n", arr);
//	return 0;
//}

//void reverse(char*left, char*right)
//{
//	assert(left != NULL);
//	assert(right != NULL);
//		while (left<=right)
//		{
//			char t = *left;
//			*left = *right;
//			*right = t;
//			left++;
//			right--;
//		}
//
//}
//void left(char* arr, int k)//三部反转法:
////abcdef
////afedcb
////bcdefa第一次
////bafedc
////cdefab第二次
//{
//	assert(arr);
//	int len = strlen(arr);
//	assert(k <= len);
//	reverse(arr,arr+k-1);//逆序左边
//	reverse(arr+k,arr+len-1);//逆序右边
//	reverse(arr,arr+len-1);//逆序整体
//}
//int left_move( char* arr1, char* arr2)
//{
//	int len = strlen(arr1);
//	int i = 0;
//	for (i = 0; i < len; i++)
//	{
//		left(arr1, 1);
//		int ret = strcmp(arr1, arr2);
//		if (ret == 0)
//		{
//			return 1;
//		}
//	}
//	return 0;
//}
//int main()
//{
//	//2.判断一个字符串是否为另外一个字符串旋转之后的字符串。
//	//	例如：给定s1 = AABCD和s2 = BCDAA，返回1
//	//	给定s1 = abcd和s2 = ACBD，返回0.
//	//	AABCD左旋一个字符得到ABCDA
//	//	AABCD左旋两个字符得到BCDAA
//	//	AABCD右旋一个字符得到DAABC
//	 char arr1[] = "abcdef";
//	 char arr2 [] = "cdefab";
//	int ret = left_move(arr1, arr2);
//	if (ret == 1)
//	{
//		printf("yes");
//	}
//	else
//		printf("no");
//	return 0;
//}

void left(char* arr1, char* arr2,char* arr3,int k)
{
	int i = 0;
	int p = 1;
	int len2 = strlen(arr2);
	int len1 = strlen(arr1);
	for (i = 0; i < k-1; i++)
	{
		if (*arr3 == *arr2)
		{
			//	char arr2[] = "cdefab";
			//  char arr3[] = "abcdefabcdef";
			arr2++;
			arr3++;
			p++;
		}
		else
		{
		if (p >= 2 && *arr3 != *arr2)
		{
			p =0;
		}
			arr3++;
			k++;
		}

	}
	if (p == len2 && len2==len1)
	{
		printf("yes");
	}
	else
		printf("no");
}
int main()
{
	char arr1[] = "abcdef";
	char arr2[] = "defabc";
	char arr3[] = "abcdefabcdef";
	int len = strlen(arr2);
	left(arr1, arr2,arr3,len);
	return 0;
}
