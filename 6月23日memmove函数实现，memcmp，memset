//void* my_memmove(void* dest, const void* src, size_t num)
//{
//	assert(dest);
//	assert(src);
//	void* s = dest;
//	char* str1 = (char*)dest;
//	char* str2 = (char*)src;
//	if (dest > src)//从后向前拷贝
//	{
//		while (num--)
//		{
//			*(str1 + num) =*(str2 + num);
//		}
//	}
//	else if (dest < src)//从前向后拷贝 还可以写成（else if (dest < src || dest>str2+num )）
//	{
//		while (num--)
//		{
//			*(str1 ) = *(str2 );
//			str1++; 
//			str2++;
//		}
//	}
//	return s;
//}
//int main()
//{
//	int arr[] = { 1,2,3,4,5,6,7,8,9,10 };
//	my_memmove(arr , arr+2, 20);
//	return 0;
//}

//int main()
//{
//	int arr1[] = { 1,2,6,9,5 };
//	int arr2[] = { 1,2,5,6,7 };
//	int ret = memcmp(arr1, arr2,9);//最后一个参数是字节 
//  01 00 00 00 02 00 00 00 06 
//	01 00 00 00 02 00 00 00 05 
// //06和05比
//	printf("%d", ret);//1
//	return 0;
//}
//int main()
//{
//	char arr1[] = "abcdef";
//	char arr2[] = "abcpgz";
//	int ret = memcmp(arr1, arr2,4);//-1
//	printf("%d", ret);
//	return 0;
//}

//int main()
//{
//	char arr[] = "abcdef";
//	memset(arr, '*', 2);//**cdef
//	printf("%s", arr);
//	return 0;
//}
//int main()
//{
//	int arr[10] = {0};
//	memset(arr, 1, 10);//arr中一共有40个字节把前面10个字节改成1->01 01 01 01 01 01 01 01 01 01......
//	return 0;
//}
