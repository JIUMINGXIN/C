//int main()
//{
//	unsigned char a = 200;
//	unsigned char b = 100;
//	unsigned char c = 0;
//	c = a + b;
//	//00000000 00000000 00000000 11001000-200 正数原反补相同
//	//00000000 00000000 00000000 01100100-100 正数原反补相同
//	//11001000-a(把200存储到unsigned char a里)无类型字符能访问的字节是0-255 有类型的字符能访问-128 127
//	//01100100-b(把100存储到unsigned char b里)
//	//a+b 要整型提升（无符号类型前面全补0，有符号类型前面补的数要看符号位）
//	//00000000 00000000 00000000 11001000
//	//00000000 00000000 00000000 01100100
//	//00000000 00000000 00000001 00101100 256+4+8+32=300
//	//00101100-c 44
//	printf("%d %d" ,a+b,c);
//	return 0;
//}

//int main()
//{
//	unsigned int a = 0x1234;
//	//
//	unsigned char b = *(unsigned char*)&a;//0x 00 00 12 34
//	printf("%d\n", b);//在32位大端模式处理器是变量b等于0x00
//	return 0;
//}

//int main()//杨辉三角
//{
//	int a[5][5] = { 0 };
//	int i = 0;
//	int j = 0;
//	for (i = 0; i < 5; i++)
//	{
//		for (j = 0; j < 5 - i; j++)
//		{
//			printf(" ");
//		}
//		for (j = 0; j <= i; j++)
//		{
//			a[i][0] = 1;
//			a[i][i] = 1;
//			if (i >= 2 && j>=1)
//			{
//				a[i][j] = a[i-1][j-1] + a[i-1][j ];
//			}
//			
//			printf("%d ", a[i][j]);
//		}
//		printf("\n");
//	}
//	return 0;
//}

int main()//有4个嫌疑人他们有3句真话1句假话
//a:不是我
//b:是c
//c:是d
//d:c在胡说
{
	int i = 0;
	for (i = 'a'; i <= 'd'; i++)
	{
		if ((i != 'a') + (i == 'c') + (i == 'd') + (i != 'd')==3)
		{
			printf("i=%c", i);
		}
	}
	return 0;
}
