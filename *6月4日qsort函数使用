//void test(int arr[], int sz)
//{
//	int i = 0;
//	int j = 0;
//	int t = 0;
//	for (i = 0; i < sz - 1; i++)
//	{
//		for (j = 0; j < sz - 1 - i; j++)
//		{
//			if (arr[j] > arr[j + 1])
//			{
//				t = arr[j];
//				arr[j] = arr[j + 1];
//				arr[j + 1] = t;
//			}
//		}
//	}
//}
//int main()
//{
//	int arr[10] = { 9,8,7,6,5,4,3,2,1,0 };
//	int sz = sizeof(arr) / sizeof(int);
//	int i = 0;
//	test(arr, sz);
//	for (i = 0; i < sz; i++)
//	{
//		printf("%d ", arr[i]);
//	}
//	return 0;
//}

//int main()
//{
//	int a = 10;
//	void *p= &a;
//	*p = 0;//void* 类型的指针，不能进行解引用操作（能访问多少字节）
//	p++//void* 类型的指针,不能进行+-整数操作 （走多少步）
//	char b = 'pp';
//	p = &b;//void* 类型指针，可以接收任意类型的地址
//	return 0;
//}

//void qsort(void* base, size_t num, size_t size,int (*compar)(const void*, const void*));
//int cmp_int(const void* e1, const void* e2)
//{
//	return *(int*)e1 - *(int*)e2;
//}
//void test1()
//{
//	int arr[10] = { 9,8,7,6,5,4,3,2,1,0 };
//	int sz = sizeof(arr) / sizeof(int);
//	int i = 0;
//	qsort(arr, sz, sizeof(int), cmp_int);
//	for (i = 0; i < sz; i++)
//	{
//		printf("%d ", arr[i]);
//	}
//}
//int cmp_float(const void* e1, const void* e2)
//{
//	//if (*(float*)e1 == *(float*)e2)//因为返回的是浮点型但是接收的返回值是int
//	//{
//	//	return 0;
//	//}
//	//else if (*(float*)e1 > *(float*)e2)
//	//{
//	//	return 1;
//	//}
//	//else
//	//	return -1;
//
//	//return (int)( * (float*)e1 - *(float*)e2);
//}
//void test2()
//{
//	float arr[6] = { 9.0,8.0,7.0,6.0,5.0,4.0 };
//	int sz = sizeof(arr) / sizeof(float);
//	int i = 0;
//	qsort(arr, sz, sizeof(float), cmp_float);
//	for (i = 0; i < sz; i++)
//	{
//		printf("%f ", arr[i]);
//	}
//}
struct stu 
{
	char name[10];
	int age;
};
//int cmp_struct_age(const void* e1, const void* e2)
//{
//	return   ((struct stu*)e1)->age -   ((struct stu*)e2)->age;//因为age就是int
//}
int cmp_struct_name(const void* e1, const void* e2)
{
	//比较名字就是比较字符串
	//字符串比较不能直接用><=，应该用strcmp函数。strcmp：如果前面比后面大返回比0大的数，相等返回0，前面比后面小返回比0小的数
	return strcmp ( ((struct stu*)e1)->name , ((struct stu*)e2)->name);//strcmp比较时是看首字母大小按26位字母表来比
}
//void test3()
//{
//	struct stu s[3] = { {"张三",20},{"李四",30},{"王五",10} };
//	int i = 0;
//	int sz = sizeof(s) / sizeof(struct stu);
//	qsort(s, sz, sizeof(struct stu), cmp_struct_age);
//}
void test4()
{
	struct stu s[3] = { {"张三",20},{"李四",30},{"王五",10} };
	int i = 0;
	int sz = sizeof(s) / sizeof(struct stu);
	qsort(s, sz, sizeof(struct stu), cmp_struct_name);
}
int main()
{
	//test1();
	//test2();
	//test3();
	test4();
	return 0;
} 
